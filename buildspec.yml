phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo 'about to call dockerd'
      - nohup /usr/local/bin/dockerd-entrypoint.sh &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - curl -sS -o aws-iam-authenticator https://amazon-eks.s3-us-east-2.amazonaws.com/latest/bin/linux/amd64/aws-iam-authenticator
      - curl -LO https://dl.k8s.io/release/stable.txt
      - export KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt)
      - curl -LO "https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl"
      - curl -LO "https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl.sha256"
      - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - chmod +x ./kubectl ./aws-iam-authenticator
      - export PATH=$PWD/:$PATH
      - python --version
      - echo 'export PATH=$PWD/:$PATH' >> $HOME/.bashrc
      - kubectl version --client
      - python -m pip install --upgrade --force pip
      - apt-get update && apt-get -y install jq && pip install --upgrade awscli

  pre_build:
    commands:
      - TAG="$REPOSITORY_NAME.$REPOSITORY_BRANCH.$ENVIRONMENT_NAME.$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$TAG"'@' simple_jwt_api.yml
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
      - echo $(ls -l)

  build:
    commands:
      - docker build --tag $REPOSITORY_URI:$TAG .

  post_build:
    commands:
      - docker push $REPOSITORY_URI:$TAG
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_KUBECTL_ROLE_ARN
      - kubectl apply -f simple_jwt_api.yml
      - printf '[{"name":"simple_jwt_api","imageUri":"%s"}]' $REPOSITORY_URI:$TAG > build.json

artifacts:
  files: build.json

env:
  parameter-store:
    JWT_SECRET: JWT_SECRET